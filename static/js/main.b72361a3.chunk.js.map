{"version":3,"sources":["map/BaseMap.js","sidebar/FilterSidebar.js","slider/Slider.js","App.js","reportWebVitals.js","index.js"],"names":["config","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","pitch","bearing","BaseMap","props","state","layers","mapData","iconData","this","setState","data","key","loc","arrLoc","slice","length","split","push","coordinates","parseFloat","weight","HeatmapLayer","id","getPosition","d","getWeight","aggregation","nextProps","updateData","className","initialViewState","controller","_generateLayer","viewState","mapStyle","mapboxApiAccessToken","React","Component","hStyle","color","height","tStyle","bStyle","customStyles","amber","control","base","background","borderRadius","isFocused","borderColor","boxShadow","menu","marginTop","menuList","padding","ColorButton","createMuiTheme","palette","primary","withStyles","theme","root","amber500","backgroundColor","grey","Button","convert","stringArr","res","s","value","label","FilterSideBar","MultiSelect","labelName","reducedOptions","filterData","filterOptions","currentSelection","filters","console","log","Select","closeMenuOnSelect","styles","defaultValue","isMulti","options","menuIconClick","setMenuCollapse","menuCollapse","onSubmit","updateMapData","JSON","parse","stringify","style","variant","onClick","alert","collapsed","AirbnbSlider","thumb","width","border","marginLeft","marginRight","active","track","rail","opacity","Slider","App","handleDrawerOpen","openSidebar","handleDrawerClose","getMapData","data1","mapData1","filteredData","datapoint","shouldInclude","field","selectedOptions","includes","startDatetime","endDatetime","FilterSidebar","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72361a3.chunk.js","sourcesContent":["import React from 'react';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {HeatmapLayer} from '@deck.gl/aggregation-layers';\n\nconst config = {\n  mapboxAccessToken: \"pk.eyJ1IjoibWVsb2R5cGh1IiwiYSI6ImNrbjJlbms0eDE2eTkyb21vb3RpOTJtYmoifQ.KyZkOMUbvjs8btwGKqNyjg\" \n}\n\nconst MAP_STYLE = 'https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json';\n\nconst INITIAL_VIEW_STATE = {\n    longitude: -73.75,\n    latitude: 40.73,\n    zoom: 9,\n    maxZoom: 16,\n    pitch: 0,\n    bearing: 0\n  };  \n\n// DeckGL react component\nclass BaseMap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            layers: [],\n            mapData: {},\n            iconData: []\n        }\n    }\n\n    updateData(mapData) {\n        this.setState({\n            mapData: mapData\n        })\n    }\n\n    // updates the general datasets from new props\n    _generateLayer() {\n        var data = [];\n\n        for (const key in this.state.mapData) {\n          let datapoint = this.state.mapData[key];\n          let loc = datapoint[\"Location\"];\n          let arrLoc = loc.slice(1, loc.length - 1).split(\", \");\n    \n          if (arrLoc && arrLoc.length == 2) {\n            data.push({coordinates: [parseFloat(arrLoc[0]), parseFloat(arrLoc[1])], weight:1});\n          }\n        }\n    \n        const layer = new HeatmapLayer({\n            id: 'heatmapLayer',\n            data,\n            getPosition: d => d.coordinates,\n            getWeight: d => d.weight,\n            aggregation: 'SUM'\n          });\n        \n        return [layer];\n    }\n\n    // when the props change (ie. global filters should affect the map)\n    componentWillReceiveProps(nextProps) {\n        this.updateData(nextProps.mapData);\n    }\n    \n    // when the component is first created\n    componentDidMount() {\n        this.updateData(this.props.mapData);\n    }\n  \n    render() {\n        return(\n            <div>\n                <DeckGL\n                    className={'BYE'}\n                    initialViewState={INITIAL_VIEW_STATE}\n                    controller={true}\n                    layers={this._generateLayer()}\n                    viewState={this.props.viewState}\n                >\n                <StaticMap mapStyle={MAP_STYLE} mapboxApiAccessToken={config.mapboxAccessToken} />\n                </DeckGL>\n            </div>\n        );\n    }\n}\n\nexport default BaseMap;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    ","\n//import useState hook to create menu collapse state\nimport React, { Component, useState } from \"react\";\nimport filterData from \"./../data/filterOptions\";\n// import makeAnimated from 'react-select/animated';\n\n//import react pro sidebar components\nimport {\n  ProSidebar,\n  SidebarHeader,\n  SidebarFooter,\n  SidebarContent,\n} from \"react-pro-sidebar\";\n\nimport Button from '@material-ui/core/Button';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider, useTheme } from '@material-ui/core/styles';\nimport {amber, grey} from '@material-ui/core/colors';\n// import amber from '@material-ui/core/colors/amber';\n\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n\n//import icons from react icons\nimport { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\n\n//import sidebar css from react-pro-sidebar module and our custom css \nimport \"react-pro-sidebar/dist/css/styles.css\";\nimport \"./sidebar.css\";\nimport { amber500 } from \"material-ui/styles/colors\";\n\nconst lightYellow = '#ffdd99';\nconst hStyle = { color: '#ffdd99', height: '20px' };\nconst tStyle = { color: 'white' };\nconst bStyle = { color: 'black' };\nconst shade = amber[500];\n\nconst customStyles = {\n  control: (base, state) => ({\n    ...base,\n    background: \"white\",\n    // match with the menu\n    borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n    // Overwrittes the different states of border\n    borderColor: state.isFocused ? lightYellow : \"white\",\n    // Removes weird border around container\n    boxShadow: state.isFocused ? null : null,\n    \"&:hover\": {\n      // Overwrittes the different states of border\n      borderColor: state.isFocused ? \"red\" : \"blue\"\n    }\n  }),\n  menu: base => ({\n    ...base,\n    // override border radius to match the box\n    borderRadius: 0,\n    // kill the gap\n    marginTop: 0\n  }),\n  menuList: base => ({\n    ...base,\n    // kill the white space on first and last option\n    padding: 0\n  })\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: amber,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: amber500,\n    backgroundColor: grey[900],\n    '&:hover': {\n      backgroundColor: amber500,\n    },\n  },\n}))(Button);\n\nfunction convert(stringArr) {\n  let res = [];\n\n  for (const s in stringArr){\n    res.push({value:s, label:s})\n  }\n\n  return res;\n}\n\n// const animatedComponents = makeAnimated();\n\nconst zipcode = \"Incident Zip\";\nconst borough = \"borough\";\nconst neighborhood = \"neighborhood\";\nconst location_type= \"Location Type\";\n\nclass FilterSideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuCollapse: false,\n      filterOptions: filterData.filterOptions,\n      filters: JSON.parse(JSON.stringify(filterData.filterOptions)),\n    }\n  }\n\n  convert(stringArr) {\n    let res = [];\n  \n    for (const s in stringArr){\n      res.push({value:s, label:s})\n    }\n  \n    return res;\n  }\n\n  MultiSelect = (labelName) => {\n\n    var options = filterData.filterOptions;\n    var reducedOptions = convert(options[labelName]);\n\n    var currentSelection = convert(this.state.filters[labelName]);\n\n    console.log(\"options\");\n    console.log(reducedOptions);\n    console.log(\"label name\");\n    console.log(labelName);\n\n    // let handleChange = (newValue, actionMeta) => {\n    //   this.setState({filters: {\n    //     zipcode: zipcode == labelName? newValue: this.state.filters.zipcode,\n    //     borough: borough == labelName? newValue: this.state.filters.borough,\n    //     neighborhood: neighborhood == labelName? newValue: this.state.filters.neighborhood,\n    //     location_type: location_type == labelName? newValue: this.state.filters.location_type,\n    //     }\n    //   });\n\n    //   // this.props.updateMapData(this.state.filters)\n    // };\n  \n    return (\n      <div className=\"tinyspace\">\n        <Select\n          closeMenuOnSelect={false}\n          styles={customStyles}\n          // onChange={handleChange}\n          // components={animatedComponents}\n          defaultValue={currentSelection}\n          isMulti\n          options={reducedOptions}\n        />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // console.log(this.state.filterOptions)\n    // console.log(this.state.filters)\n  }\n\n  componentDidMount() {\n  //   // Initally all filters are selected\n  //   console.log(this.props.filterOptions)\n  //   this.setState({\n  //     // filters: {\n  //     //   zipcode: this.props.filterOptions.zipcode.slice(), // make copy w/ slice\n  //     //   borough: this.props.filterOptions.borough.slice(),\n  //     //   neighborhood: this.props.filterOptions.neighborhood.slice(),\n  //     //   location_type: this.props.filterOptions.location_type.slice(),\n  //     // }\n  //     filters: JSON.parse(JSON.stringify(this.props.filterOptions)),\n  //   });\n\n  //   console.log(\"setting initial filters\")\n  //   console.log(this.state.filters)\n  //   console.log(\"done setting\")\n  }\n\n  setMenuCollapse(value) {\n    this.setState({\n      menuCollapse: value\n    })\n  }\n\n  menuIconClick = () => {\n    this.setMenuCollapse(!this.state.menuCollapse);\n  }\n\n  onSubmit = () => {\n    this.props.updateMapData(this.state.filters);\n  }\n\n  getSidebarContent(filterOptions) {\n    return (\n      <div>\n        <div style = {tStyle}>Filters</div>\n        {this.MultiSelect(zipcode)}\n        {this.MultiSelect(neighborhood)}\n        {this.MultiSelect(borough)}\n        {this.MultiSelect(location_type)}\n        <ColorButton variant=\"contained\" onClick={() => { alert('clicked') }}>Filter</ColorButton>   \n      </div>\n    )\n  }\n\n  // // for single select field\n  // handleChangeSingle = (event) => {\n  //   let value = event.target.value;\n  //   let fieldName = event.target.id;\n\n  //   let currFilters = this.state.filters;\n  //   currFilters[fieldName] = [value];\n  //   this.setState({\n  //     filters: currFilters,\n  //   })\n  // }\n\n  // handleChangeMultiple = (event) => {\n  //   const {options} = event.target;\n  //   let fieldName = event.target.id;\n\n  //   var values = [];\n  //   for (let i = 0, l = options.length; i < l; i += 1) {\n  //     if (options[i].selected) {\n  //       values.push(options[i].value);\n  //     }\n  //   }\n\n  //   let currFilters = this.state.filters;\n  //   currFilters[fieldName] = values;\n\n  //   this.setState({\n  //     filters: currFilters,\n  //   })\n  // }\n\n  render() {\n    var filterOptions = this.convert(filterData.filterOptions);\n    return (\n      <>\n        <div id=\"header\">\n            {/* collapsed props to change menu size using menucollapse state */}\n          <ProSidebar collapsed={this.state.menuCollapse} style = {bStyle}>\n            <SidebarHeader>\n              <div className=\"logotext\">\n                {/* small and big change using menucollapse state */}\n                <p>{this.state.menuCollapse ? (\n                  <div style={hStyle}>\n                    A4\n                  </div>\n                ) : (\n                  <div style={hStyle}>\n                    The City that Never Sleeps\n                  </div>\n                )}</p>\n              </div>\n              <div className=\"closemenu\" onClick={this.menuIconClick}>\n                  {/* changing menu collapse icon on click */}\n                {this.state.menuCollapse ? (\n                  <div className=\"space\">\n                    <FiArrowRightCircle\n                      color = {'#ffdd99'}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"space\">\n                    <FiArrowLeftCircle\n                      color = {'#ffdd99'}\n                    />\n                  </div>\n                )}\n              </div>\n            </SidebarHeader>\n            {!this.state.menuCollapse &&(\n              <div> \n                <div>\n                  <div className=\"space\">\n                    <SidebarContent>\n                      {/* {this.getSidebarContent(filterOptions)} */}\n                      How has the pandemic affected the party scene in NYC?\n                      A look at all loud music complaints from Jan 2019 through March 2021.\n                    </SidebarContent>\n                  </div>\n                  <div className=\"bottom-space\">\n                    <SidebarFooter>\n                    <div style = {tStyle}>Horne, Phu, Price</div>\n                    </SidebarFooter>\n                  </div>\n                </div>\n              </div>\n            )}\n          </ProSidebar>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default FilterSideBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst AirbnbSlider = withStyles({\n  root: {\n    color: '#3a8589',\n    height: 3,\n    padding: '13px 0',\n  },\n  thumb: {\n    height: 27,\n    width: 27,\n    backgroundColor: '#fff',\n    border: '1px solid currentColor',\n    marginTop: -12,\n    marginLeft: -13,\n    boxShadow: '#ebebeb 0 2px 2px',\n    '&:focus, &:hover, &$active': {\n      boxShadow: '#ccc 0 2px 3px 1px',\n    },\n    '& .bar': {\n      // display: inline-block !important;\n      height: 9,\n      width: 1,\n      backgroundColor: 'currentColor',\n      marginLeft: 1,\n      marginRight: 1,\n    },\n  },\n  active: {},\n  track: {\n    height: 3,\n  },\n  rail: {\n    color: '#d8d8d8',\n    opacity: 1,\n    height: 3,\n  },\n})(Slider);\n\nclass DateSlider extends React.Component {\n  \n  getThumbComponent(props) {\n    return (\n      <span {...props}>\n        <span className=\"bar\" />\n        <span className=\"bar\" />\n        <span className=\"bar\" />\n      </span>\n    );\n  }\n\n  render() {\n    return (\n      <div style={{zIndex: 1}}>\n        <Typography gutterBottom>Select a Date Range</Typography>\n        <AirbnbSlider\n          ThumbComponent={this.getThumbComponent}\n          getAriaLabel={(index) => (index === 0 ? 'Start Month' : 'End Month')}\n          defaultValue={[20, 40]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DateSlider;","import React from 'react';\nimport './App.css';\n\nimport data1 from \"./data/mapData1\";\nimport data2 from \"./data/mapData2\";\nimport data3 from \"./data/mapData3\";\nimport filterData from \"./data/filterOptions\";\n\nimport BaseMap from \"./map/BaseMap\";\nimport FilterSidebar from \"./sidebar/FilterSidebar\";\nimport DateSlider from \"./slider/Slider\";\n\nconst fieldNames = ['Location Type', 'borough', 'neighborhood', 'Incident Zip'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapData: {},\n      filteredData: {},\n      layers: [],\n      iconData: [],\n      startDatetime: 'January 1, 2019, 00:00:00 AM',\n      endDatetime: 'March 31, 2021, 11:59:59 PM',\n      // add any other default filter parameters here\n      openSidebar: false,\n      filterOptions: filterData.filterOptions,\n    }\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({\n      openSidebar: true\n    })\n  };\n\n  handleDrawerClose = () => {\n    this.setState({\n      openSidebar: false\n    })\n  };\n\n  // gets map data\n  getMapData = () => {\n    var mapData = {\n      ...data1.mapData1,\n    };\n\n    return mapData;\n  }\n\n  // for filtering data, called by FilterSidebar.js\n  // filters = {'fieldName': [all selected options]}\n  updateMapData = (filters) => {\n    // TODO clip the dataset by the start and end datetimes\n    // for every data point\n    \n    let mapData = this.state.mapData;\n    var filteredData = {};\n\n    for (const key in mapData) {\n      let datapoint = mapData[key];\n      let shouldInclude = true;\n\n      // check all filters\n      for (const field in filters) {\n        let selectedOptions = filters[field];\n        let value = datapoint[field];\n\n        // once it doesn't match one of the filters, drop it\n        if (!selectedOptions.includes(value)) {\n          shouldInclude = false;\n        }\n      }\n      if (shouldInclude) {\n        filteredData[key] = JSON.parse(JSON.stringify(datapoint));\n      }\n    }\n\n    this.setState({\n      filteredData: filteredData\n    })\n  }\n  \n  // when the component is first created\n  componentDidMount() {\n    var mapData = this.getMapData();\n\n    this.setState({\n      mapData: mapData,\n      filterOptions: filterData.filterOptions,\n      filteredData: JSON.parse(JSON.stringify(mapData))\n    })\n  }\n\n  render(viewState) {\n    return (\n      <div>\n        <BaseMap \n          mapData={this.state.filteredData}\n          viewState={viewState}\n        >\n        </BaseMap>\n        <FilterSidebar \n          updateMapData={this.updateMapData} \n          open={this.state.openSidebar}\n          filterOptions={this.state.filterOptions}\n        >\n        </FilterSidebar>\n        {/* <div style={{zIndex: 10}}>\n          <DateSlider> \n          </DateSlider>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}